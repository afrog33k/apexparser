//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApexParserTest.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ApexParserTest.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @IsTest
        ///private class ApplicationTest 
        ///{
        ///	@IsTest
        ///	private static void callingDomainFactoryShouldGiveRegisteredImplsAndMocks()
        ///	{
        ///		domainObjectAcct = 
        ///			Domain.newInstance(
        ///				new List&lt;SObject&gt; 
        ///					{ new Account( 
        ///						Id = testAccountId,
        ///						Name = &apos;Test Account&apos;) }
        ///				, Account.SObjectType);
        ///
        ///		try {
        ///			Domain.newInstance(new List&lt;Contact&gt;{ new Contact(LastName = &apos;TestContactLName&apos;) });
        ///			System.assert(false, &apos;Expected exception&apos;);
        ///		} catch (System.TypeException e) {
        ///			System [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ApplicationTest {
            get {
                return ResourceManager.GetString("ApplicationTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public abstract class ClassAbstract
        ///{
        ///}.
        /// </summary>
        internal static string ClassAbstract {
            get {
                return ResourceManager.GetString("ClassAbstract", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public enum ClassEnum
        ///{
        ///    America,
        ///    Canada,
        ///    Russia
        ///}
        ///.
        /// </summary>
        internal static string ClassEnum {
            get {
                return ResourceManager.GetString("ClassEnum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassException extends Exception
        ///{
        ///}.
        /// </summary>
        internal static string ClassException {
            get {
                return ResourceManager.GetString("ClassException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to global class ClassGlobal
        ///{
        ///}.
        /// </summary>
        internal static string ClassGlobal {
            get {
                return ResourceManager.GetString("ClassGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ClassInterface implements IClassInterface
        ///{
        ///    public Id GetId() {
        ///        return &apos;&apos;;
        ///    }
        ///    public string GetName()
        ///    {
        ///        return &apos;Jay&apos;;
        ///    }
        ///}.
        /// </summary>
        internal static string ClassInterface {
            get {
                return ResourceManager.GetString("ClassInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassInternal
        ///{
        ///    public class InternalClassOne
        ///    {
        ///    }
        ///    public class InternalClassTwo
        ///    {
        ///    }
        ///}.
        /// </summary>
        internal static string ClassInternal {
            get {
                return ResourceManager.GetString("ClassInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassOne {
        ///    public void CallClassTwo() {
        ///        ClassTwo classTwo = new ClassTwo();
        ///        System.debug(&apos;Test&apos;);
        ///    }
        ///}.
        /// </summary>
        internal static string ClassOne {
            get {
                return ResourceManager.GetString("ClassOne", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassOne
        ///{
        ///     public void CallClassTwo()
        ///     {
        ///          ClassTwo classTwo = new ClassTwo();
        ///          System.debug(&apos;Test&apos;);
        ///     }
        ///}
        ///.
        /// </summary>
        internal static string ClassOne_Formatted {
            get {
                return ResourceManager.GetString("ClassOne_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @RestResource(urlMapping=&apos;/api/v1/RestDemo&apos;)
        ///global class ClassRest
        ///{
        ///    @httpDelete
        ///    global static void DoDelete() {
        ///    }
        ///
        ///    @httpPost
        ///    global static void Post() {
        ///    }
        ///
        ///    @httpGet
        ///    global static string Get() {
        ///        return &apos;Jay&apos;;
        ///    }
        ///
        ///    @httpPatch
        ///    global static void Patch() {
        ///    }
        ///
        ///    @httpPut
        ///    global static void Put() {
        ///    }
        ///}.
        /// </summary>
        internal static string ClassRest {
            get {
                return ResourceManager.GetString("ClassRest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassTwo {
        ///    public ClassTwo() {
        ///        System.debug(&apos;Test&apos;);
        ///    }
        ///
        ///    public ClassTwo(String vin) {
        ///    }
        ///}.
        /// </summary>
        internal static string ClassTwo {
            get {
                return ResourceManager.GetString("ClassTwo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassTwo
        ///{
        ///     public ClassTwo()
        ///     {
        ///          System.debug(&apos;Test&apos;);
        ///     }
        ///
        ///     public ClassTwo(String vin)
        ///     {
        ///     }
        ///}
        ///.
        /// </summary>
        internal static string ClassTwo_Formatted {
            get {
                return ResourceManager.GetString("ClassTwo_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @isTest
        ///public class ClassUnitTest
        ///{
        ///    @TestSetup
        ///    public static void Setup()
        ///    {
        ///        System.Debug(&apos;One Time Setup Got Called&apos;);
        ///    }
        ///    @isTest
        ///    public static void AssertTrue()
        ///    {
        ///        System.Assert(true, &apos;Assert True&apos;);
        ///    }
        ///    @isTest
        ///    public static void AssertEquals()
        ///    {
        ///        System.AssertEquals(5, 5, &apos;Assert Equal&apos;);
        ///    }
        ///    @isTest
        ///    public static void AssertNotEquals()
        ///    {
        ///        System.AssertNotEquals(5, 0, &apos;Assert Not Equal&apos;);
        ///    }
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ClassUnitTest {
            get {
                return ResourceManager.GetString("ClassUnitTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @isTest
        ///public class ClassUnitTestRunAs
        ///{
        ///    static testMethod void RunAsExample()
        ///    {
        ///        User newUser = new User();
        ///        System.RunAs(newUser)
        ///        {
        ///
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string ClassUnitTestRunAs {
            get {
                return ResourceManager.GetString("ClassUnitTestRunAs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @isTest(SeeAllData=true)
        ///public class ClassUnitTestSeeAllData
        ///{
        ///}.
        /// </summary>
        internal static string ClassUnitTestSeeAllData {
            get {
                return ResourceManager.GetString("ClassUnitTestSeeAllData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public virtual class ClassVirtual
        ///{
        ///}.
        /// </summary>
        internal static string ClassVirtual {
            get {
                return ResourceManager.GetString("ClassVirtual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassTwo {
        ///    public ClassTwo() { // constructor
        ///        System.debug(&apos;Test&apos;);
        ///    }
        ///
        ///    public ClassTwo(String vin) { // another constructor
        ///    // with a lot of misplaced comments
        ///    }
        ///
        ///    /*
        ///     * This  is a comment line one
        ///     * This is a comment // line two
        ///     */
        ///    public void Hello() { System.debug(&apos;Hello&apos;); }
        ///}.
        /// </summary>
        internal static string ClassWithComments {
            get {
                return ResourceManager.GetString("ClassWithComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassTwo
        ///{
        ///     public ClassTwo()
        ///     {
        ///          // constructor
        ///          System.debug(&apos;Test&apos;);
        ///     }
        ///
        ///     public ClassTwo(String vin)
        ///     {
        ///          // another constructor
        ///          // with a lot of misplaced comments
        ///     }
        ///
        ///     /*
        ///      * This  is a comment line one
        ///      * This is a comment // line two
        ///      */
        ///     public void Hello()
        ///     {
        ///          System.debug(&apos;Hello&apos;);
        ///     }
        ///}
        ///.
        /// </summary>
        internal static string ClassWithComments_Formatted {
            get {
                return ResourceManager.GetString("ClassWithComments_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public without sharing class ClassWithOutSharing
        ///{
        ///}.
        /// </summary>
        internal static string ClassWithOutSharing {
            get {
                return ResourceManager.GetString("ClassWithOutSharing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ClassWithSharing
        ///{
        ///}.
        /// </summary>
        internal static string ClassWithSharing {
            get {
                return ResourceManager.GetString("ClassWithSharing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class CommentFail
        ///{
        ////*
        ///* ************************************************************************************************
        ///* This is a general method for retrieving an sObject by it&apos;s id. selectFields is a list of fields
        ///* to return on the sObject.
        ///* ************************************************************************************************
        ///*/
        ///}.
        /// </summary>
        internal static string CommentFail {
            get {
                return ResourceManager.GetString("CommentFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /**
        /// * This comment belongs to the Class Syntax
        /// */
        ///public with sharing class Comments 
        ///// This comment belongs to the open bracket syntax
        ///{
        ///
        ///    // This comment belongs to the Method Syntax
        ///    public static void DemoMethod() {
        ///        Integer demoValue = 5; // Side Line Comment
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string Comments {
            get {
                return ResourceManager.GetString("Comments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class CustomerDto
        ///{
        ///    public String make {get;set;}
        ///    public String year {get;set;}
        ///    public CustomerDto.User user {get;set;}
        ///
        ///    public class User {
        ///        public string userName {get;set;}
        ///    }
        ///}.
        /// </summary>
        internal static string CustomerDto {
            get {
                return ResourceManager.GetString("CustomerDto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class CustomerDto
        ///{
        ///     public String make { get; set; }
        ///
        ///     public String year { get; set; }
        ///
        ///     public CustomerDto.User user { get; set; }
        ///
        ///     public class User
        ///     {
        ///          public String userName { get; set; }
        ///     }
        ///}
        ///.
        /// </summary>
        internal static string CustomerDto_Formatted {
            get {
                return ResourceManager.GetString("CustomerDto_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class DataAccessDemo
        ///{
        ///    private DataAccessLayerI dl;
        ///
        ///    public DataAccessDemo()
        ///    {
        ///        if (Test.isRunningTest())
        ///        {
        ///            dl = (DataAccessLayerMok) MokProvider.createMokProvidor(DataAccessLayerMok.class);
        ///        }
        ///        else
        ///        {
        ///            dl = new DataAccessLayer();
        ///        }
        ///    }
        ///
        ///    public String UpdateContactEmailAddress(string firstName, string lastName, string email)
        ///    {
        ///        Contact contact = dl.GetContactByName(firstName, lastName);
        ///      [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DataAccessDemo {
            get {
                return ResourceManager.GetString("DataAccessDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class Demo
        ///{
        ///    public static void RunContactDemo()
        ///    {
        ///        Contact contactNew = new Contact(LastName = &apos;Jay1&apos;, EMail = &apos;abc@abc.com&apos;);
        ///        insert contactNew;
        ///        System.debug(contactNew.Id);
        ///
        ///        List&lt;Contact&gt; contacts = [SELECT Id, Email FROM Contact WHERE Id = :contactNew.Id];
        ///        for (Contact c : contacts)
        ///        {
        ///            System.debug(c.Email); c.Email = &apos;new@new.com&apos;;
        ///        }
        ///        update contacts;
        ///        contacts = [SELECT Id, Email FROM Contact W [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Demo {
            get {
                return ResourceManager.GetString("Demo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class Demo2
        ///{
        ///    public void MethodOne(int x)
        ///    {
        ///        if (x == 5)
        ///        {
        ///            Console.WriteLine(1);
        ///
        ///            if (x == 8)
        ///            {
        ///                Console.WriteLine(8);
        ///            }
        ///
        ///            Console.WriteLine(2);
        ///            Console.WriteLine(3);
        ///        } else if (x == 6)
        ///        {
        ///            Console.WriteLine(6);
        ///        }
        ///        else
        ///        {
        ///            Console.WriteLine(7);
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string Demo2 {
            get {
                return ResourceManager.GetString("Demo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ExceptionDemo
        ///{
        ///    public static void CatchDemo()
        ///    {
        ///        try
        ///        {
        ///            ThrowDemo();
        ///        }
        ///        catch (MathException e)
        ///        {
        ///            System.debug(e.getMessage());
        ///        }
        ///        finally
        ///        {
        ///            System.debug(&apos;Finally&apos;);
        ///        }
        ///    }
        ///
        ///    public static void ThrowDemo()
        ///    {
        ///        throw new MathException(&apos;something bad happened!&apos;);
        ///    }
        ///}.
        /// </summary>
        internal static string ExceptionDemo {
            get {
                return ResourceManager.GetString("ExceptionDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///
        ////**
        /// *	Interface for the answering framework.
        /// *	This interface must be implemented inside the test class and implement the call back method answer.
        /// *	@group Core
        /// */
        ///public interface fflib_Answer
        ///{
        ///	/**
        ///	 *	Method to be implemented in the test class to implement the call back method.
        ///	 *	@param invocation The invocation on the mock.
        ///	 *	@throws The exception to be thrown.
        ///	 *	@return The value to be returned.
        ///	 */
        ///	Object answer(ff [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_Answer {
            get {
                return ResourceManager.GetString("fflib_Answer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /*
        ///     Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        ///     */
        ///    /**
        ///     *	Interface for the answering framework.
        ///     *	This interface must be implemented inside the test class and implement the call back method answer.
        ///     *	@group Core
        ///     */
        ///    public interface fflib_Answer
        ///    {
        ///        /**
        ///         *	Method to be implemented in the test class to impleme [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_Answer_CSharp {
            get {
                return ResourceManager.GetString("fflib_Answer_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ////**
        /// *	Interface for the answering framework.
        /// *	This interface must be implemented inside the test class and implement the call back method answer.
        /// *	@group Core
        /// */
        ///public interface fflib_Answer
        ///{
        ///    /**
        ///     *	Method to be implemented in the test class to implement the call back method.
        ///     *	@param invocation The invocation on the mock.
        ///     *	@throws The exception to be thrown.
        ///     *	@return The value to be retu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_Answer_Formatted {
            get {
                return ResourceManager.GetString("fflib_Answer_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///
        ////**
        /// * @nodoc
        /// */
        ///@isTest
        ///private class fflib_AnswerTest
        ///{
        ///
        ///	private static fflib_InvocationOnMock actualInvocation = null;
        ///
        ///	@isTest
        ///	static void thatAnswersWithException()
        ///	{
        ///		// Given
        ///		fflib_ApexMocks mocks = new fflib_ApexMocks();
        ///		fflib_MyList mockList = (fflib_MyList)mocks.mock(fflib_MyList.class);
        ///
        ///		mocks.startStubbing();
        ///		mocks.when(mockList.get2(0, &apos;Hi hi Hello Hi hi&apos;)).thenAnswer(new fflib_AnswerTest.ExceptionForAnswer [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnswerTest {
            get {
                return ResourceManager.GetString("fflib_AnswerTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /*
        ///     Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        ///     */
        ///    /**
        ///     * @nodoc
        ///     */
        ///    [IsTest]
        ///    private class fflib_AnswerTest
        ///    {
        ///        private static fflib_InvocationOnMock actualInvocation = null;
        ///
        ///        [IsTest]
        ///        static void thatAnswersWithException()
        ///        {
        ///            // Given
        ///            fflib_ApexMocks mocks = new fflib_Ape [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnswerTest_CSharp {
            get {
                return ResourceManager.GetString("fflib_AnswerTest_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ////**
        /// * @nodoc
        /// */
        ///@IsTest
        ///private class fflib_AnswerTest
        ///{
        ///    private static fflib_InvocationOnMock actualInvocation = null;
        ///
        ///    @IsTest
        ///    static void thatAnswersWithException()
        ///    {
        ///        // Given
        ///        fflib_ApexMocks mocks = new fflib_ApexMocks();
        ///        fflib_MyList mockList = (fflib_MyList)mocks.mock(fflib_MyList.class);
        ///        mocks.startStubbing();
        ///        mocks.when(mockList.get2(0, &apos;Hi hi Hello Hi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnswerTest_Formatted {
            get {
                return ResourceManager.GetString("fflib_AnswerTest_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///
        ////**
        /// *	&apos;Classic&apos; invocation verifier - checks that a method was called with the given arguments the expected number of times.
        /// *	The order of method calls is not important.
        /// *	@group Core
        /// */
        ///public class fflib_AnyOrder extends fflib_MethodVerifier
        ///{
        ///	/*
        ///	 * Verifies a method was invoked the expected number of times, with the expected arguments.
        ///	 * @param qualifiedMethod The method to be verified.
        ///	 * @param methodArg The arguments  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnyOrder {
            get {
                return ResourceManager.GetString("fflib_AnyOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /*
        ///     Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        ///     */
        ///    /**
        ///     *	&apos;Classic&apos; invocation verifier - checks that a method was called with the given arguments the expected number of times.
        ///     *	The order of method calls is not important.
        ///     *	@group Core
        ///     */
        ///    public class fflib_AnyOrder : fflib_MethodVerifier
        ///    {
        ///        /*
        ///         * Verifies  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnyOrder_CSharp {
            get {
                return ResourceManager.GetString("fflib_AnyOrder_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ////**
        /// *	&apos;Classic&apos; invocation verifier - checks that a method was called with the given arguments the expected number of times.
        /// *	The order of method calls is not important.
        /// *	@group Core
        /// */
        ///public class fflib_AnyOrder extends fflib_MethodVerifier
        ///{
        ///    /*
        ///     * Verifies a method was invoked the expected number of times, with the expected arguments.
        ///     * @param qualifiedMethod The method to be verified.
        ///     * @param  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnyOrder_Formatted {
            get {
                return ResourceManager.GetString("fflib_AnyOrder_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///
        ////**
        /// * @nodoc
        /// */
        ///@isTest
        ///private class fflib_AnyOrderTest
        ///{
        ///	private static final String BASIC_VERIFY_ASSERTION_MESSAGE = &apos;Expected : {0}, Actual: {1} -- Wanted but not invoked: &apos;;
        ///
        ///	/*
        ///	 *	replicating the apex mocks tests with the new syntax
        ///	 */
        ///
        ///	@isTest
        ///	private static void whenVerifyMultipleCallsWithMatchersShouldReturnCorrectMethodCallCounts()
        ///	{
        ///		// Given
        ///		fflib_ApexMocks mocks = new fflib_ApexMocks();
        ///		fflib_MyList mockLi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnyOrderTest {
            get {
                return ResourceManager.GetString("fflib_AnyOrderTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///
        ////**
        /// * @nodoc
        /// */
        ///@isTest
        ///private class fflib_AnyOrderTest
        ///{
        ///	private static final String BASIC_VERIFY_ASSERTION_MESSAGE = &apos;Expected : {0}, Actual: {1} -- Wanted but not invoked: &apos;;
        ///
        ///	/*
        ///	 *	replicating the apex mocks tests with the new syntax
        ///	 */
        ///
        ///	@isTest
        ///	private static void whenVerifyMultipleCallsWithMatchersShouldReturnCorrectMethodCallCounts()
        ///	{
        ///		// Given
        ///		fflib_ApexMocks mocks = new fflib_ApexMocks();
        ///		fflib_MyList mockLi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnyOrderTest_CSharp {
            get {
                return ResourceManager.GetString("fflib_AnyOrderTest_CSharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// Copyright (c) 2017 FinancialForce.com, inc.  All rights reserved.
        /// */
        ///
        ////**
        /// * @nodoc
        /// */
        ///@isTest
        ///private class fflib_AnyOrderTest
        ///{
        ///	private static final String BASIC_VERIFY_ASSERTION_MESSAGE = &apos;Expected : {0}, Actual: {1} -- Wanted but not invoked: &apos;;
        ///
        ///	/*
        ///	 *	replicating the apex mocks tests with the new syntax
        ///	 */
        ///
        ///	@isTest
        ///	private static void whenVerifyMultipleCallsWithMatchersShouldReturnCorrectMethodCallCounts()
        ///	{
        ///		// Given
        ///		fflib_ApexMocks mocks = new fflib_ApexMocks();
        ///		fflib_MyList mockLi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string fflib_AnyOrderTest_Formatted {
            get {
                return ResourceManager.GetString("fflib_AnyOrderTest_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class ForIfWhile
        ///{
        ///    public void MethodIfClean()
        ///    {
        ///        String medal_color ;
        ///        Integer place ;
        ///        if (place == 1)
        ///        {
        ///            medal_color = &apos;gold&apos; ;
        ///        }
        ///        else if (place == 2)
        ///        {
        ///            medal_color = &apos;silver&apos; ;
        ///        }
        ///        else if (place == 3)
        ///        {
        ///            medal_color = &apos;bronze&apos; ;
        ///        }
        ///        else
        ///        {
        ///            medal_color = null ;
        ///        }
        ///    }
        ///    public void MethodForTraditional()
        ///    {
        ///        for (I [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ForIfWhile {
            get {
                return ResourceManager.GetString("ForIfWhile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ForIfWhile
        ///{
        ///    public void MethodIfClean(Integer place)
        ///    {
        ///        String modelColor;
        ///
        ///        if (place == 1)
        ///        {
        ///            modelColor = &apos;Gold&apos; ;
        ///        }
        ///        else if (place == 2)
        ///        {
        ///            modelColor = &apos;Silver&apos; ;
        ///        }
        ///        else if (place == 3)
        ///        {
        ///            modelColor = &apos;Bronze&apos; ;
        ///        }
        ///        else
        ///        {
        ///            modelColor = null ;
        ///        }
        ///    }
        ///    public void MethodForTraditional()
        ///    {
        ///        for (Integ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ForIfWhile2 {
            get {
                return ResourceManager.GetString("ForIfWhile2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ForIfWhile
        ///{
        ///    public void MethodIfClean(Integer place)
        ///    {
        ///        String modelColor;
        ///
        ///        if (place == 1)
        ///        {
        ///            modelColor = &apos;Gold&apos; ;
        ///        }
        ///        else if (place == 2)
        ///        {
        ///            modelColor = &apos;Silver&apos; ;
        ///        }
        ///        else if (place == 3)
        ///        {
        ///            modelColor = &apos;Bronze&apos; ;
        ///        }
        ///        else
        ///        {
        ///            modelColor = null ;
        ///        }
        ///    }
        ///    public void MethodForTraditional()
        ///    {
        ///        for (Integ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ForIfWhile3 {
            get {
                return ResourceManager.GetString("ForIfWhile3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///* This  is a comment line one
        ///* This is a comment // line two
        ///*/
        ///public with sharing class FormatDemo
        ///{
        ///    public Integer
        ///        dateOfBirth
        ///            { get; set; }
        ///    public void ForLoopTest() {
        ///        for (Integer i = 0; i &lt; 10; i++) {
        ///            List&lt;Contact&gt; contacts =
        ///            [
        ///                    SELECT Name, Email // This is a middle line comment
        ///                    From Contact
        ///                    Where Name = &apos;Jay&apos;
        ///            ];
        ///        }
        ///    }
        ///}.
        /// </summary>
        internal static string FormatDemo {
            get {
                return ResourceManager.GetString("FormatDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///* This  is a comment line one
        ///* This is a comment // line two
        ///*/
        ///public with sharing class FormatDemo
        ///{
        ///    public Integer dateOfBirth { get; set; }
        ///
        ///    public void ForLoopTest()
        ///    {
        ///        for (Integer i = 0; i &lt; 10; i++)
        ///        {
        ///            List&lt;Contact&gt; contacts = [SELECT Name, Email From Contact
        ///                    Where Name = &apos;Jay&apos;];
        ///        }
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string FormatDemo_Formatted {
            get {
                return ResourceManager.GetString("FormatDemo_Formatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class GetSetDemo {
        ///    public double MyReadWritePropPublic { get; set; }
        ///    private Integer propPrvt;
        ///    public Integer prop {
        ///        get {
        ///            return propPrvt;
        ///        }
        ///        set {
        ///            propPrvt = value;
        ///        }
        ///    }
        ///    public Integer MyReadOnlyProp {
        ///        get;
        ///    }
        ///
        ///    private static Integer myStaticPropPrvt;
        ///    public static Integer MyStaticProp {
        ///        get {
        ///            return myStaticPropPrvt;
        ///        }
        ///    }
        ///
        ///    Integer MyReadOnlyPropPrvt  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetSetDemo {
            get {
                return ResourceManager.GetString("GetSetDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public interface IClassInterface extends IClassInterfaceExt {
        ///    string GetName();
        ///}
        ///.
        /// </summary>
        internal static string IClassInterface {
            get {
                return ResourceManager.GetString("IClassInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public interface IClassInterfaceExt {
        ///    Id GetId();
        ///}.
        /// </summary>
        internal static string IClassInterfaceExt {
            get {
                return ResourceManager.GetString("IClassInterfaceExt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class JsonExample
        ///{
        ///    public void JsonExampleMethod()
        ///    {
        ///        String name = &apos;Jay&apos;;
        ///
        ///        String jsonString = JSON.Serialize(name);
        ///
        ///        String newName = (String)JSON.Deserialize(jsonString, String.class);
        ///    }
        ///}.
        /// </summary>
        internal static string JsonExample {
            get {
                return ResourceManager.GetString("JsonExample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class ListAndArrayDemo {
        ///    public List&lt;String&gt; StringList = new List&lt;String&gt; { &apos;one&apos;, &apos;two&apos; };
        ///    public Integer[] IntegerArray = new Integer[]{1, 2, 3};
        ///
        ///    public void Method() {
        ///        List&lt;String&gt; StringListLocal = new List&lt;String&gt; { &apos;one&apos;, &apos;two&apos; };
        ///        Integer[] IntegerArrayLocal = new Integer[]{1, 2, 3};
        ///    }
        ///}.
        /// </summary>
        internal static string ListAndArrayDemo {
            get {
                return ResourceManager.GetString("ListAndArrayDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to global abstract class MethodAndConstructor
        ///{
        ///    global abstract void MethodThree();
        ///
        ///    MethodAndConstructor()
        ///    {
        ///    }
        ///    public MethodAndConstructor(String demo)
        ///    {
        ///    }
        ///    public virtual void VirtualMethod()
        ///    {
        ///    }
        ///    @future
        ///    public static void FutureMethod()
        ///    {
        ///    }
        ///    @future(callOut=true)
        ///    public static void FutureMethodWithCallOut()
        ///    {
        ///    }
        ///    void StringVoid()
        ///    {
        ///    }
        ///
        ///    private void StringPrivateVoid()
        ///    {
        ///
        ///    }
        ///    public void [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MethodAndConstructor {
            get {
                return ResourceManager.GetString("MethodAndConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class PrimitiveTypes
        ///{
        ///    public Blob MyBlob = Blob.ValueOf(&apos;Jay&apos;);
        ///    public Boolean IsWinner = true;
        ///    public Date MyDate = Date.Today();
        ///    public DateTime MyDateTime = DateTime.Now();
        ///    public Decimal MyDecimal = 12.4567;
        ///    public Double d=3.133433;
        ///    public Id MyId = &apos;006E0000004TquXIAS&apos;;
        ///    public Integer MyInteger = 1;
        ///    public Long MyLong = 23432424242L;
        ///    public Time MyTime = Time.NewInstance(1, 2, 3, 4);
        ///    public String MyString = &apos;Jay&apos;;
        ///
        ///    public void Demo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PrimitiveTypes {
            get {
                return ResourceManager.GetString("PrimitiveTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // ClassDeclaration
        ///public with sharing class PropertyAndField
        ///{
        ///    // PropertyDeclarationSyntax
        ///    public DateTime DateTimeGetSet { get; set; }
        ///    // PropertyDeclarationSyntax
        ///    public List&lt;DateTime&gt; DateTimeGetSetGeneric { get; set; }
        ///    // PropertyDeclarationSyntax
        ///    public DateTime[] DateTimeGetSetArray { get; set; }
        ///    // FieldDeclarationSyntax
        ///    public DateTime DateTimeEmpty;
        ///    // FieldDeclarationSyntax
        ///    public DateTime DateTimeInitilized = DateTime.now();
        ///    // FieldDeclarationSyntax [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PropertyAndField {
            get {
                return ResourceManager.GetString("PropertyAndField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class PropertyAndField
        ///{
        ///    transient Integer TransientInteger;
        ///    public DateTime DateTimeGetSet { get; set; }
        ///    public List&lt;DateTime&gt; DateTimeGetSetGeneric { get; set; }
        ///    public DateTime[] DateTimeGetSetArray { get; set; }
        ///    public DateTime DateTimeEmpty;
        ///    public DateTime DateTimeInitialized = DateTime.now();
        ///    public List&lt;DateTime&gt; DateTimeList = new List&lt;DateTime&gt;();
        ///    public DateTime[] DateTimeArray = new DateTime[5];
        ///    public String Name = &apos;jay&apos;;
        ///    public final St [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PropertyAndField2 {
            get {
                return ResourceManager.GetString("PropertyAndField2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class PropertyAndField
        ///{
        ///    transient Integer TransientInteger;
        ///    public DateTime DateTimeGetSet { get; set; }
        ///    public List&lt;DateTime&gt; DateTimeGetSetGeneric { get; set; }
        ///    public DateTime[] DateTimeGetSetArray { get; set; }
        ///    public DateTime DateTimeEmpty;
        ///    public DateTime DateTimeInitialized = DateTime.now();
        ///    public List&lt;DateTime&gt; DateTimeList = new List&lt;DateTime&gt;();
        ///    public DateTime[] DateTimeArray = new DateTime[5];
        ///    public String Name = &apos;jay&apos;;
        ///    public final St [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PropertyAndField3 {
            get {
                return ResourceManager.GetString("PropertyAndField3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public class RunAll
        ///{
        ///    public RunAll()
        ///    {
        ///        //ClassAbstract classAbstract = new ClassAbstract();
        ///        //ClassEnum classEnum = ClassEnum.America;
        ///        ClassException classException = new ClassException();
        ///        ClassGlobal classGlobal = new ClassGlobal();
        ///        ClassInterface classInterface = new ClassInterface();
        ///
        ///        ClassInternal classInternal = new ClassInternal();
        ///        ClassInternal.InternalClassOne internalClassOne = new ClassInternal.InternalClassOne();
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RunAll {
            get {
                return ResourceManager.GetString("RunAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing class SoqlDemo {
        ///    /**
        ///     * A simple CRUD Example
        ///     */
        ///    public static void CrudExample()
        ///    {
        ///        Contact contactNew = new Contact(LastName = &apos;Jay&apos;, EMail = &apos;abc@abc.com&apos;);
        ///        insert contactNew;
        ///
        ///        System.debug(contactNew.Id);
        ///
        ///        List&lt;Contact&gt; contacts = [SELECT Id, Email FROM Contact WHERE Id = :contactNew.Id];
        ///        for (Contact c : contacts)
        ///        {
        ///            System.debug(c.Email); c.Email = &apos;new@new.com&apos;;
        ///        }
        ///        update  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SoqlDemo {
            get {
                return ResourceManager.GetString("SoqlDemo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public with sharing abstract class SoqlDemo {
        ///
        ///    public List&lt;Contact&gt; contactList = [SELECT 1, Id, Email FROM Contact];
        ///
        ///    public SoqlDemo()
        ///    {
        ///        contactList = [SELECT 2, Id, Email FROM Contact];
        ///    }
        ///
        ///    public abstract void AbstractMethod();
        ///
        ///
        ///    public void CommentedQueryIsIgnored()
        ///    {
        ///    	// Contact contact = [SELECT Id, Email FROM Contact LIMIT 1];
        ///
        ///    	/* 
        ///        	List&lt;Contact&gt; contacts = [SELECT Id, Email FROM Contact WHERE Id = :contactNew.Id];
        ///    	*/
        ///    }        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SoqlDemo2 {
            get {
                return ResourceManager.GetString("SoqlDemo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to namespace ApexSharpDemo.ApexCode
        ///{
        ///    using Apex.ApexSharp;
        ///    using Apex.System;
        ///    using SObjects;
        ///
        ///    /**
        ///    * A simple CRUD Example
        ///    */
        ///    public static class SoqlDemo
        ///    {
        ///        public static void CrudExample()
        ///        {
        ///            Contact contactNew = new Contact() { LastName = &quot;Jay&quot;, Email = &quot;abc@abc.com&quot; };
        ///            Soql.Insert(contactNew);
        ///
        ///            System.Debug(contactNew.Id);
        ///
        ///            List&lt;Contact&gt; contacts = Soql.Query&lt;Contact&gt;(&quot;SELECT Id, Email, Name FRO [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SoqlDemoCS {
            get {
                return ResourceManager.GetString("SoqlDemoCS", resourceCulture);
            }
        }
    }
}
